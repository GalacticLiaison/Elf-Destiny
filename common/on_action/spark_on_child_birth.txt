on_pregnancy_mother = {
	events = {
		elf_pregnancy_events.0001
		elf_pregnancy_events.0002
	}
}


on_birth_child = {
	# effect = {
		
	# }
	on_actions = {
		on_birth_elf_trait
		# on_birth_higher_level_base_genetics
		on_birth_endless_lord
	}
}

on_birth_elf_trait = {
	effect = {
		# debug_log = "IN ELF TRAITS ASSIGNMENT!!!!"
		# average_elf_trait_score = 7
		if = { # Both Parents Human
			limit = {
				average_elf_trait_score = 0
			}
			# debug_log = "elf trait 0"
			# Do nothing (Human)
		}
		else_if = { # Below Elf Blood
			limit = {
				average_elf_trait_score > 0
				average_elf_trait_score < 1
			}
			# debug_log = "elf trait 1"
			random_list = {
				40 = {
					debug_log = "elf trait 1: yes"
					add_trait = elf_blood
				}
				60 = {
					debug_log = "elf trait 1: no"
					# Do nothing (Human)
				}
			}
		}
		if = { # Both Parents Elf Blood
			limit = {
				average_elf_trait_score = 1
			}
			# debug_log = "elf trait 2"
			random_list = {
				5 = {
					# Ascencion!
					debug_log = "elf trait 2: yes"
					add_trait = elf
				}
				95 = {
					debug_log = "elf trait 2: no"
					add_trait = elf_blood
				}
			}
		}
		if = { # Between Elf Blood and Elf
			limit = {
				average_elf_trait_score > 1
				average_elf_trait_score < 2
			}
			# debug_log = "elf trait 3"
			random_list = {
				70 = {
					debug_log = "elf trait 3: yes"
					add_trait = elf_blood
				}
				30 = {
					debug_log = "elf trait 3: No"
					add_trait = elf
				}
			}
		}
		if = { # Both Parents Elf
			limit = {
				average_elf_trait_score = 2
			}
			# debug_log = "elf trait 4"
			random_list = {
				5 = {
					# Ascencion!
					debug_log = "elf trait 4: yes"
					add_trait = high_elf
				}
				95 = {
					debug_log = "elf trait 4: no"
					add_trait = elf
				}
			}
		}
		if = { # Between Elf and High Elf
			limit = {
				average_elf_trait_score > 2
				average_elf_trait_score < 3
			}
			# debug_log = "elf trait 5"
			random_list = {
				70 = {
					debug_log = "elf trait 5: yes"
					add_trait = elf
				}
				30 = {
					debug_log = "elf trait 5: no"
					add_trait = high_elf
				}
			}
		}
		if = { # Both Parents High Elf
			limit = {
				average_elf_trait_score = 3
			}
			# debug_log = "elf trait 6"
			random_list = {
				5 = {
					# Ascencion!
					debug_log = "elf trait 6: no"
					add_trait = true_elf
				}
				95 = {
					debug_log = "elf trait 6: yes"
					add_trait = high_elf
				}
			}
		}
		if = { # Between High Elf and True Elf
			limit = {
				average_elf_trait_score > 3
				average_elf_trait_score < 4
			}
			debug_log = "elf trait 7"
			random_list = {
				70 = {
					debug_log = "elf trait 7: yes"
					add_trait = high_elf
				}
				30 = {
					debug_log = "elf trait 7: no"
					add_trait = true_elf
				}
			}
		}
		if = { # Both Parents True Elf
			limit = {
				average_elf_trait_score = 4
			}
			debug_log = "elf trait 8"
			random_list = {
				# 5 = {
				# 	debug_log = "elf trait 8: yes"
				# 	# Ascencion!
				# 	add_trait = radiant_elf
				# }
				95 = {
					debug_log = "elf trait 8: no"
					add_trait = true_elf
				}
			}
		}
		# if = { # Between True Elf and Radiant Elf
		# 	limit = {
		# 		average_elf_trait_score > 4
		# 		average_elf_trait_score < 5
		# 	}
		# 	debug_log = "elf trait 9"
		# 	random_list = {
		# 		70 = {
		# 			debug_log = "elf trait 9: yes"
		# 			add_trait = true_elf
		# 		}
		# 		30 = {
		# 			debug_log = "elf trait 9: no"
		# 			add_trait = radiant_elf
		# 		}
		# 	}
		# }
		# if = { # Both Parents Radiant Elf
		# 	limit = {
		# 		average_elf_trait_score = 5
		# 	}
		# 	debug_log = "elf trait 10"
		# 	random_list = {
		# 		5 = {
		# 			# Ascencion!
		# 			debug_log = "elf trait 10: yes"
		# 			add_trait = celestial_elf
		# 		}
		# 		95 = {
		# 			debug_log = "elf trait 10: no"
		# 			add_trait = radiant_elf
		# 		}
		# 	}
		# }
		# if = { # Between Radiant Elf and Celestial Elf
		# 	limit = {
		# 		average_elf_trait_score > 5
		# 		average_elf_trait_score < 6
		# 	}
		# 	debug_log = "elf trait 11"
		# 	random_list = {
		# 		70 = {
		# 			debug_log = "elf trait 11: yes"
		# 			add_trait = radiant_elf
		# 		}
		# 		30 = {
		# 			debug_log = "elf trait 11: no"
		# 			add_trait = celestial_elf
		# 		}
		# 	}
		# }
		# if = { # Both Parents Radiant Elf
		# 	limit = {
		# 		average_elf_trait_score = 6
		# 	}
		# 	debug_log = "elf trait 12"
		# 	random_list = {
		# 		5 = {
		# 			# Ascencion!
		# 			debug_log = "elf trait 12: yes"
		# 			add_trait = ascendant_elf
		# 		}
		# 		95 = {
		# 			debug_log = "elf trait 12: no"
		# 			add_trait = celestial_elf
		# 		}
		# 	}
		# }
		# if = { # Between Celestial Elf and Ascendant Elf
		# 	limit = {
		# 		average_elf_trait_score > 6
		# 		average_elf_trait_score < 7
		# 	}
		# 	debug_log = "elf trait 13"
		# 	random_list = {
		# 		70 = {
		# 			debug_log = "elf trait 13: yes"
		# 			add_trait = celestial_elf
		# 		}
		# 		30 = {
		# 			debug_log = "elf trait 13: no"
		# 			add_trait = ascendant_elf
		# 		}
		# 	}
		# }
		# if = { # Both Parents Radiant Elf
		# 	limit = {
		# 		average_elf_trait_score = 7
		# 	}
		# 	debug_log = "elf trait 14"
		# 	random_list = {
		# 		5 = {
		# 			# Ascencion!
		# 			debug_log = "elf trait 14: yes"
		# 			add_trait = seraphic_elf
		# 		}
		# 		95 = {
		# 			debug_log = "elf trait 14: no"
		# 			add_trait = ascendant_elf
		# 		}
		# 	}
		# }
		# if = { # Between Ascendant Elf and Seraphic Elf
		# 	limit = {
		# 		average_elf_trait_score > 7
		# 		average_elf_trait_score < 8
		# 	}
		# 	debug_log = "elf trait 15"
		# 	random_list = {
		# 		70 = {
		# 			debug_log = "elf trait 15: yes"
		# 			add_trait = ascendant_elf
		# 		}
		# 		30 = {
		# 			debug_log = "elf trait 15: no"
		# 			add_trait = seraphic_elf
		# 		}
		# 	}
		# }
		# if = { # Both Parents Seraphic Elf
		# 	limit = {
		# 		average_elf_trait_score = 8
		# 	}
		# 	debug_log = "elf trait 16"
		# 	random_list = {
		# 		5 = {
		# 			# Ascencion!
		# 			debug_log = "elf trait 16: yes"
		# 			add_trait = valar
		# 		}
		# 		95 = {
		# 			debug_log = "elf trait 16: no"
		# 			add_trait = seraphic_elf
		# 		}
		# 	}
		# }
		# if = { # Between Seraphic Elf and Valar Elf
		# 	limit = {
		# 		average_elf_trait_score > 8
		# 		average_elf_trait_score < 9
		# 	}
		# 	debug_log = "elf trait 17"
		# 	random_list = {
		# 		70 = {
		# 			add_trait = seraphic_elf
		# 		}
		# 		30 = {
		# 			add_trait = valar
		# 		}
		# 	}
		# }
		# if = { # Both Parents Valar
		# 	limit = {
		# 		average_elf_trait_score = 9
		# 	}
		# 	debug_log = "elf trait 18"
		# 	add_trait = valar
		# }
	}
}

# TODO: Major ascencions should only be allowed through breeding 
# if family legacy perk is unlocked, (or maybe just rarity?)

# TODO: When both parents same, should we add minor chance to reduce trait anyway?
#	- leaning strongly torwards yes

# TODO: increase odds of genetic ascencion when parent has high alignment (add to trait description)


on_birth_higher_level_base_genetics = {
	effect = {
		if = {
			limit = {
				culture = {
					has_cultural_parameter = higher_level_base_genetics_unlocked
				}
			}

			physique_good_4_inheritance_effect = yes
			beauty_good_4_inheritance_effect = yes
			intellect_good_4_inheritance_effect = yes
		}
		if = {
			limit = {
				culture = {
					has_cultural_parameter = familial_familiarity_pure_blood
				}
			}

			pure_blooded_inheritance_effect = yes
		}
	}
}

on_birth_endless_lord = {
	trigger = {
		OR = {
			scope:real_father = {
				is_ruler = yes
			}
			scope:mother = {
				is_ruler = yes
			}
		}
	}

	effect = {
		if = {
			limit = {
				culture = {
					has_cultural_parameter = endless_lord_active
				}
			}

			# Identify Mother or Father as lord
			determine_endless_lord_parent = yes

			if = {
				limit = {
					# Check if child is first child
					scope:lord_to_copy = {
						any_child = {
							count > 1
						}
					}
				}

				remove_all_genetic_traits_from_child = yes
				add_endless_lord_genetic_traits = yes

				scope:child = {
					# TODO: will handle this during naming event
					# change_first_name = { template_character = scope:lord_to_copy }
					copy_inheritable_appearance_from = scope:lord_to_copy
					# TODO Gender?
				}
			}
			else = {
				debug_log = "FAILED TO TRIGGER ENDLESS LORD"
			}
		}
	}
}