# character just about to die is root scope
# if a killer is known, it's set as scope:killer
on_death = {
    on_actions = {
        aeluran_hierarchy_management
		clear_entrance_traits
        pedlar_story_pass
    } 
}

aeluran_hierarchy_management = {
    trigger = {
        OR = {
            AND = {
                exists = global_var:high_matriarch
                global_var:high_matriarch = root
            }
            is_target_in_global_variable_list = {
                name = aeluran_matrons
                target = root
            }
        }
    }

    effect = {
        debug_log = "Aeluran has died"
        save_scope_as = dead_aeluran
        if = {
            limit = {
                global_var:high_matriarch = root
            }
            debug_log = "Replacing Matriarch"

            appoint_new_aeluran_matriarch_effect = yes
            
			title:d_high_matriarch.holder = { # Delay needed for effect to work for whatever reason
                trigger_event = {
                    id = aeluran_repeating.006
                    days = 1
                }
            }
        }
        else_if = {
            limit = {
                is_target_in_global_variable_list = {
                    name = aeluran_matrons
                    target = root
                }
            }
            debug_log = "Replacing Matron"

			appoint_new_aeluran_matron_effect = yes
		}
	}
}

clear_entrance_traits = {
	effect = {
        # Clear entrance trait from dead character
        if = {
            limit = {
                has_trait = entranced
            }
            remove_trait =  entranced
        }
        if = {
            limit = {
                has_trait = enthralled
            }
            remove_trait =  enthralled
        }
        # clear entrance traits of entrancer's victims
		every_hooked_character = {
			if = {
				limit = {
					root = {
						OR = {
							has_hook_of_type = {
								target = prev
								type = entranced
							}	
							has_hook_of_type = {
								target = prev
								type = enthralled
							}	
						}
					}
				}
				if = {
					limit = {
						has_trait = entranced
					}
					remove_trait =  entranced
				}
				if = {
					limit = {
						has_trait = enthralled
					}
					remove_trait =  enthralled
				}
			}			
		}
	}
}

pedlar_story_pass = {
    trigger = {
        is_any_elf_type = yes
        is_ai = no
    }
    effect = {
        if = {
            limit = {
                player_heir = {
                    NOR = {
                        owns_story_of_type = peddler_management_story
                        has_character_modifier = peddlers_business_card_modifier
                    }
                }
            }
            player_heir = {
                create_story = {
                    type = peddler_management_story
                }
            } 
        }
    }
}