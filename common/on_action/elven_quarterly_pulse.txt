# # Called from code once a quarter for "playable" (count+) characters.
# # Root is the character
# # scope:quarter is which quarter it's for, from 1 to 4. Note that scope:quarter = 1 isn't necessarily in Q1 by calendar time
quarterly_playable_pulse = {
	on_actions = {
		form_advanced_tribal_goverment_pulse
		advanced_shrewd_pulse
		distribute_aeluran_advisors_pulse
		heroic_courage_pulse
		beguiling_nature_pulse
		gain_varangian_adventure_innovation_pulse
		
		aeluran_order_maintenance

		# handle_elf_tradition_effects_pulse
	}
}

aeluran_order_maintenance = {
	on_actions = {
		# Things to do
		# 1.) If the matriarch has died, host an election to replace her
		# matriarch_election
		# 2.) If there arent enough matrons, elect new ones
		# matron_counting
			# - candidates should be picked from existing sisters if possible
		# 3.) aeluran school for new sisters recruiting
		elf_daughters_to_school
		elf_daughters_back_from_school
		# 4.) If not enough spare sisters, generate more

	}
}

elf_daughters_to_school = {
	trigger = {
		is_ruler = yes
		faith = {
			has_doctrine = tenet_aeluran_sisters
		}
		exists = cp:councillor_aeluran_advisor
		any_child = {
			is_female = yes
			age < 8
			age > 6
			NOT = {
				has_character_flag = recruited_by_aelurans
			}
			is_spark_talented = yes
		}
	}

	effect = {
		trigger_event = aeluran_repeating.001
	}
}

elf_daughters_back_from_school = {
	trigger = {
		is_ruler = yes
		faith = {
			has_doctrine = tenet_aeluran_sisters
		}
		any_child = {
			is_female = yes
			age > 12
			age < 16
			has_character_flag = recruited_by_aelurans
		}
	}

	effect = {
		trigger_event = aeluran_repeating.002
	}
}


gain_varangian_adventure_innovation_pulse = {
	trigger = {
		is_ai = no
		root = {
			culture = {
				has_cultural_parameter = elf_unlock_varangian_adventurers_innovation
				NOT = {
					has_innovation = innovation_varangian_adventurers
				}
			}
		}
	}
	effect = {
		root = {
			culture = {
				add_innovation = innovation_varangian_adventurers
			}
		}
	}
}

form_advanced_tribal_goverment_pulse = {
	trigger = {
		# is_ai = no
		culture = {
			has_cultural_parameter = form_advanced_tribal_government
		}
		NOT = {
			government_has_flag = government_is_advanced_tribal
		}
		NOT = {
			has_government = aeluran_weavers_government
		}
	}
	random_events = {
		100 = tribal_ascension.0001
	}
}

advanced_shrewd_pulse = {
	trigger = {
		culture = {
			has_cultural_parameter = advanced_shrewd
		}
		# learning >= 15
	}
	
	effect = {
		# Rulers
		if = {
			limit = {
				learning >= 15
				NOT = {
					has_trait = shrewd
					has_trait = shrewd_2
				}
			}
	
			add_trait = shrewd
		}
	
		if = {
			limit = {
				learning >= 20
				has_trait = shrewd
			}
	
			remove_trait = shrewd
			add_trait = shrewd_2
		}

		# Courtiers
		every_courtier = {
			limit = {
				learning >= 15
			}

			if = {
				limit = {
					learning >= 15
					NOT = {
						has_trait = shrewd
						has_trait = shrewd_2
					}
				}
		
				add_trait = shrewd
			}
		
			if = {
				limit = {
					learning >= 20
					has_trait = shrewd
				}
		
				remove_trait = shrewd
				add_trait = shrewd_2
			}
		}
	}
}

heroic_courage_pulse = {
	trigger = {
		culture = {
			has_cultural_parameter = heroic_trait_unlocked
		}
		# enemies_slayed > 1
	}

	effect = {
		debug_log = "HEROIC PULSE"

		# Rulers
		if = {
			limit = {
				NOT = {
					has_trait = brave
					has_trait = heroic
				}
				enemies_slayed > 1
			}

			if = {
				limit = {
					has_trait = craven
				}
				remove_trait = craven
			}
	
			debug_log = "AWARDING BRAVE"

			add_trait = brave
		}
	
		if = {
			limit = {
				has_trait = brave
				enemies_slayed > 4
			}

			debug_log = "AWARDING HEROIC"

			if = {
				limit = {
					has_trait = craven
				}
				remove_trait = craven
			}

			remove_trait = brave
			add_trait = heroic
		}

		# Courtiers
		every_courtier = {
			limit = {
				enemies_slayed > 1
			}

			if = {
				limit = {
					NOT = {
						has_trait = brave
						has_trait = heroic
					}
					enemies_slayed > 1
				}
		
				debug_log = "AWARDING BRAVE"

				if = {
					limit = {
						has_trait = craven
					}
					remove_trait = craven
				}
	
				add_trait = brave
			}
		
			if = {
				limit = {
					has_trait = brave
					enemies_slayed > 4
				}

				if = {
					limit = {
						has_trait = craven
					}
					remove_trait = craven
				}
	
				debug_log = "AWARDING HEROIC"
	
				remove_trait = brave
				add_trait = heroic
			}
		}


	}
}

beguiling_nature_pulse = {
	trigger = {
		culture = {
			has_cultural_parameter = passionate_trait_unlocked
		}
		times_had_sex_with_a_lord_count >= 2
	}

	effect = {
		debug_log = "BEGUILING PULSE"
		set_variable = {
			name = sex_partner_number 
			value = times_had_sex_with_a_lord_count
		}

		create_unique_lord_sex_partner_list_effect = yes
		set_variable = {
			name = unique_lords_sexed_count_value 
			value = unique_lords_sexed_count
		}

		# Rulers
		if = {
			limit = {
				NOT = {
					has_trait = lustful
					has_trait = passionate
				}
				unique_lords_sexed_count >= 2
			}
	
			debug_log = "AWARDING LUSTFUL"

			if = {
				limit = {
					has_trait = chaste
				}
				remove_trait = chaste
			}

			add_trait = lustful
		}
	
		if = {
			limit = {
				has_trait = lustful
				unique_lords_sexed_count >= 5
			}

			if = {
				limit = {
					has_trait = chaste
				}
				remove_trait = chaste
			}

			debug_log = "AWARDING PASSIONATE"

			remove_trait = lustful
			add_trait = passionate
		}

		# Courtiers
		every_courtier = {
			limit = {
				enemies_slayed > 1
			}

			if = {
				limit = {
					NOT = {
						has_trait = lustful
						has_trait = passionate
					}
					enemies_slayed > 1
				}
		
				debug_log = "AWARDING LUSTFUL"

				if = {
					limit = {
						has_trait = chaste
					}
					remove_trait = chaste
				}
	
				add_trait = lustful
			}
		
			if = {
				limit = {
					has_trait = lustful
					enemies_slayed > 4
				}

				if = {
					limit = {
						has_trait = chaste
					}
					remove_trait = chaste
				}
	
				debug_log = "AWARDING PASSIONATE"
	
				remove_trait = lustful
				add_trait = passionate
			}
		}


	}
}

distribute_aeluran_advisors_pulse = {
	trigger = {
		is_ruler = yes
		highest_held_title_tier >= tier_county
		NOT = {
			primary_title = {
				is_mercenary_company = yes
			}
		}
		faith = {
			has_doctrine = tenet_aeluran_sisters
		}
		NOT = {
			exists = root.cp:councillor_aeluran_advisor
			# exists = diarch
		}
		NOT = {
			has_character_flag = aeluran_advisor_is_on_the_way
		}
		trigger_if = {
			limit = { has_active_diarchy = yes }
			NOT = {
				has_diarchy_type = aeluran_regency
			}
		}
	}

	effect = {
		debug_log = "Asigning Aeluran Advisor"
		if = {
			limit = {
				NOT = {
					exists = root.cp:councillor_aeluran_advisor
				}
			}

			trigger_event = aeluran_diarchy.100
		}
	}
}