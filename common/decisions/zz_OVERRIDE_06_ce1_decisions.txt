# prevent the isolation descisions from running if it's a Rut epidemic

isolate_capital_decision = {
    picture = "gfx/interface/illustrations/decisions/decision_black_plague.dds"
    major = yes
    sort_order = 100

    title = {
        first_valid = {
            triggered_desc = {
                trigger = { capital_county = { has_county_modifier = isolate_capital_decision_modifier } }
                desc = unisolate_capital_decision
            }
            desc = isolate_capital_decision
        }
    }

    desc = {
        first_valid = {
            triggered_desc = {
                trigger = { capital_county = { has_county_modifier = isolate_capital_decision_modifier } }
                desc = unisolate_capital_decision_desc
            }
            desc = isolate_capital_decision_desc
        }
    }

    confirm_text = {
        first_valid = {
            triggered_desc = {
                trigger = { capital_county = { has_county_modifier = isolate_capital_decision_modifier } }
                desc = unisolate_family_decision_confirm
            }
            desc = isolate_capital_decision_confirm
        }
    }
    
    is_shown = {
        is_landed = yes
        highest_held_title_tier >= tier_county
        OR = {
            realm_has_any_epidemic = {
                SIZE = 1
                INTENSITY = minor
            }
            capital_county = { has_county_modifier = isolate_capital_decision_modifier }
        }
    }

    widget = {
        gui = "decision_view_widget_option_list_generic"
        controller = decision_option_list_controller
        decision_to_second_step_button = "SELECT_ACTION"
        show_from_start = yes

        item = { # Isolate your capital
            value = isolate_capital_decision
            is_valid = {
                is_landed = yes
                highest_held_title_tier >= tier_county
                NOT = {
                    capital_county = { has_county_modifier = isolate_capital_decision_modifier }
                }
                custom_tooltip = {
                    text = isolate_capital_decision_tt
                    any_sub_realm_county = {
                        any_county_province = {
                            any_province_epidemic = {
                                count >= 1
                                NOT = {
                                    epidemic_type = epidemic_type:the_rut
                                }
                            }
                        }
                    }
                }
            }
            current_description = isolate_capital_decision_desc
            localization = isolate_capital_decision
            icon = "gfx/interface/icons/message_feed/plague.dds"
            ai_chance = {
                value = 100
                if = {
                    limit = {
                        any_sub_realm_county = {
                            any_county_province = {
                                any_province_epidemic = {
                                    outbreak_intensity >= major
                                }
                            }
                        }
                    }
                    multiply = 1.5
                }
                if = {
                    limit = {
                        any_sub_realm_county = {
                            any_county_province = {
                                any_province_epidemic = {
                                    outbreak_intensity >= apocalyptic
                                }
                            }
                        }
                    }
                    multiply = 2
                }
            }
        }

        item = { # End isolation of your capital
            value = unisolate_capital_decision
            is_valid = {
                is_landed = yes
                highest_held_title_tier >= tier_county
                custom_tooltip = {
                    text = unisolate_capital_decision_tt
                    exists = capital_county
                    capital_county = { has_county_modifier = isolate_capital_decision_modifier }
                }
            }
            current_description = unisolate_capital_decision_desc
            localization = unisolate_capital_decision
            icon = "gfx/interface/icons/court_position_types/court_cave_hermit_position.dds"
            ai_chance = {
                value = 100
                if = {
                    limit = {
                        OR = {
                            has_character_flag = ai_capital_isolation_cooldown
                            realm_has_any_epidemic = {
                                SIZE = 1
                                INTENSITY = major
                            }
                        }
                    }
                    multiply = 0
                }
            }
        }
    }
    
    cooldown = { days = 365 }

    effect = {
        if = {
            limit = {
                scope:isolate_capital_decision = yes
            }
            capital_county = {
                add_county_modifier = {
                    modifier = isolate_capital_decision_modifier
                    years = 15
                }
            }
            add_character_flag = {
                flag = ai_capital_isolation_cooldown
                years = 5
            }
        }
        if = {
            limit = {
                scope:unisolate_capital_decision = yes
            }
            capital_county = {
                remove_county_modifier = isolate_capital_decision_modifier
            }
        }
    }

    ai_check_interval = 36
    
    ai_potential = {
        NOT = { ai_rationality <= medium_positive_ai_value }
        NOT = { has_character_flag = ai_capital_isolation_cooldown }
    }

    ai_will_do = {
        base = 100
    }
}

isolate_family_decision = {
    picture = "gfx/interface/illustrations/decisions/decision_black_plague.dds"
    major = yes
    sort_order = 100

    title = {
        first_valid = {
            triggered_desc = {
                trigger = { has_character_modifier = isolating_modifier }
                desc = unisolate_family_decision
            }
            desc = isolate_family_decision
        }
    }

    desc = {
        first_valid = {
            triggered_desc = {
                trigger = { has_character_modifier = isolating_modifier }
                desc = unisolate_family_decision_desc
            }
            desc = isolate_family_decision_desc
        }
    }

    confirm_text = {
        first_valid = {
            triggered_desc = {
                trigger = { has_character_modifier = isolating_modifier }
                desc = unisolate_family_decision_confirm
            }
            desc = isolate_family_decision_confirm
        }
    }
    
    is_shown = {
        is_landed = yes
        OR = {
            any_sub_realm_county = {
                any_county_province = {
                    any_province_epidemic = {
                        count >= 1
                        NOT = {
                            epidemic_type = epidemic_type:the_rut
                        }
                    }
                }
            }
            has_character_modifier = isolating_modifier
        }
    }

    widget = {
        gui = "decision_view_widget_option_list_generic"
        controller = decision_option_list_controller
        decision_to_second_step_button = "SELECT_ACTION"
        show_from_start = yes
        item = { # Isolate your family
            value = isolate_family_decision
            is_valid = {
                is_landed = yes
                custom_tooltip = {
                    text = you_are_at_your_capital_tt
                    exists = root.capital_province
                    location = root.capital_province
                }
                is_available = yes
                NOT = { has_character_modifier = isolating_modifier }
                custom_tooltip = {
                    text = ai_unisolate_cooldown_tt
                    NOT = { has_variable = isolating_cooldown_var }
                }
            }
            current_description = isolate_family_decision_desc
            localization = isolate_family_decision
            icon = "gfx/interface/icons/message_feed/plague.dds"
            ai_chance = {
                value = 10
                if = {
                    limit = {
                        has_trait = paranoid
                    }
                    add = 90
                }
                if = {
                    limit = {
                        realm_has_any_epidemic = {
                            SIZE = 1
                            INTENSITY = major
                        }
                    }
                    multiply = 1.5
                }
                if = {
                    limit = {
                        realm_has_any_epidemic = {
                            SIZE = 1
                            INTENSITY = apocalyptic
                        }
                    }
                    multiply = 2
                }
            }
        }

        item = { # Unisolate your family
            value = unisolate_family_decision
            is_valid = {
                has_character_modifier = isolating_modifier
            }
            current_description = unisolate_family_decision_desc
            localization = unisolate_family_decision
            icon = "gfx/interface/icons/court_position_types/court_cave_hermit_position.dds"
            ai_chance = {
                value = 100
                subtract = ai_rationality
                if = {
                    limit = {
                        OR = {
                            has_character_flag = ai_unisolate_cooldown # We keep you isolating for 1y
                            realm_has_any_epidemic = { #If there's a major/apocalyptic plague you should stay inside
                                SIZE = 1
                                INTENSITY = major
                            }
                        }
                    }
                    multiply = 0
                }
            }
        }
    }

    effect = {
        if = {
            limit = {
                scope:isolate_family_decision = yes
            }
            show_as_tooltip = { isolate_family_decision_effect = yes }
            hidden_effect = {
                trigger_event = epidemic_events.0100
            }
        }
        if = {
            limit = {
                scope:unisolate_family_decision = yes
            }
            show_as_tooltip = { unisolate_family_decision_effect = yes }
            hidden_effect = {
                trigger_event = epidemic_events.0101
            }
        }
    }

    ai_check_interval = 6

    ai_potential = {
        NOT = { has_character_flag = ai_unisolate_cooldown }
    }

    ai_will_do = {
        base = 10
        modifier = {
            add = 90
            has_trait = paranoid
        }
        ai_value_modifier = {
            ai_boldness = -2.5
            ai_rationality = -0.5
            ai_sociability = -0.5
        }
        modifier = {
            factor = 1.5
            realm_has_any_epidemic = {
                SIZE = 1
                INTENSITY = major
            }
        }
        modifier = {
            factor = 2
            realm_has_any_epidemic = {
                SIZE = 1
                INTENSITY = apocalyptic
            }
        }
    }
}
