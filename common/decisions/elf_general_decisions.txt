adopt_elven_elective = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_adopt_elven_elective.dds"
	}
	decision_group_type = elf

	desc = adopt_elven_elective_decision_desc
	selection_tooltip = adopt_elven_elective_decision_tooltip
	ai_goal = no

	sort_order = 500

	is_shown = {
		is_ruler = yes
		is_landed = yes
		is_any_elf_type = yes
		highest_held_title_tier > tier_county
		primary_title = {
			NOT = {
				has_title_law = elf_elective_succession_law
			}
		}

		# # any county that does not have an aeluran order barony
		# any_sub_realm_barony = {
		# 	holder = root
		# 	NOT = {
		# 		title_province = scope:ruler.capital_province
		# 	}
		# }
		
	}

	# Following conditions must be true to take decision, shown in requirements section
	is_valid = {
		# custom_description = {
		# 	text = restore_the_grand_portal_decision_has_sigil_of_the_realm_lord
		# 	any_character_artifact = { has_variable = is_sigil_of_the_realm_lord }
		# }
	}

	# Following conditions Will be shown as a validation error tooltip when False
	is_valid_showing_failures_only = {
		is_imprisoned = no
		is_at_war = no
	}

	cost = {
		# TODO: implement side quests to reduce the price
		# gold = 1000
	}

	effect = {
		# custom_tooltip = adopt_elven_elective_effect
		primary_title = {
			add_title_law = elf_elective_succession_law
		}

	}
	
	ai_potential = {
		always = no
	}

	# ai_will_do = {
	# 	base = 15
	# 	ai_value_modifier = {
	# 		ai_boldness = 1.0
	# 	}
	# }
}

adopt_ascended_tribal = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_adopt_ascended_tribal.dds"
	}
	decision_group_type = elf

	desc = adopt_ascended_tribal_decision_desc
	selection_tooltip = adopt_ascended_tribal_decision_tooltip
	ai_goal = no

	sort_order = 500

	is_shown = {
		culture = {
			has_cultural_parameter = form_advanced_tribal_government
		}
		NOT = {
			has_government = advanced_tribal_government
		}
	}

	# Following conditions must be true to take decision, shown in requirements section
	is_valid = {

	}

	# Following conditions Will be shown as a validation error tooltip when False
	is_valid_showing_failures_only = {
		NOT = {
			has_government = landless_adventurer_government
		}
		is_landed = yes
	}

	cost = {
		prestige = 1000
		gold = 400
	}

	effect = {
		custom_tooltip = {
			text = adopt_ascended_tribal_decision_tooltip
		}

		custom_tooltip = {
			text = adopt_ascended_tribal_decision_convert_holdings_tooltip
		}

		add_character_modifier = {
			modifier = chieftain_visionary_modifier
		}

		trigger_event = tribal_ascension.0001
	}
	
	ai_potential = {
		NOR = {
			has_government = aeluran_weavers_government
			has_government = landless_adventurer_government
			has_government = advanced_tribal_government
		}
	}

	ai_will_do = {
		base = 25

		modifier = {
			add = 100
			liege = {
				has_government = advanced_tribal_government
			}
		}
	}
}

tame_direwolf_pup = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_attempt_to_take_direwolf_pup.dds"
	}
	decision_group_type = elf

	desc = tame_direwolf_pup_decision_desc
	selection_tooltip = tame_direwolf_pup_decision_tooltip
	ai_goal = no

	sort_order = 500

	is_shown = {
		capital_county = { 
			has_county_modifier = direwolf_population_modifier
		}
	}

	# Following conditions must be true to take decision, shown in requirements section
	is_valid = {
		capital_county = { 
			has_county_modifier = direwolf_population_modifier
		}

		custom_description = {
			text = already_have_pet
			has_pet = no
		}
	}

	# Following conditions Will be shown as a validation error tooltip when False
	is_valid_showing_failures_only = {

	}

	cost = {
		prestige = 500
	}

	cooldown = { 
		years = 5
	}

	effect = {
		custom_tooltip = {
			text = tame_direwolf_pup_effect_desc
		}
		trigger_event = wolf_invader.555
	}

	ai_potential = {
		always = no
	}

	ai_will_do = {

	}
}

visit_black_market_merchants_shop = {
	picture = {
		reference = "gfx/interface/illustrations/event_scenes/market_east.dds"
	}
	decision_group_type = elf

	desc = visit_black_market_merchants_shop_desc
	selection_tooltip = visit_black_market_merchants_shop_tooltip
	ai_goal = no

	sort_order = 500

	is_shown = {
		has_character_modifier = peddlers_business_card_modifier
	}

	# Following conditions must be true to take decision, shown in requirements section
	is_valid = {
		has_character_modifier = peddlers_business_card_modifier
	}

	# Following conditions Will be shown as a validation error tooltip when False
	is_valid_showing_failures_only = {

	}

	cost = {

	}

	cooldown = { 
		years = 1
	}

	effect = {
		trigger_event = elf_dest_misc_repeating.1031
	}

	ai_potential = {
		always = no
	}

	ai_will_do = {

	}
}