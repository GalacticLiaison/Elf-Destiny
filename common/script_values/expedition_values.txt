standard_expedition_cooldown_time = {
	value = 2
}

expedition_activity_base_cost = {
	value = standard_activity_base_cost
}

expedition_funding_min_option_cost = {
	value = 10
	multiply = activity_cost_scale_by_tier
	multiply = activity_cost_scale_by_era
	if = {
		limit = {
			culture = {
				has_cultural_tradition = tradition_adventurer_guilds 
			}
		}
		divide = 2
	}
}

expedition_funding_mid_option_cost = {
	value = 35
	multiply = activity_cost_scale_by_tier
	multiply = activity_cost_scale_by_era
	if = {
		limit = {
			culture = {
				has_cultural_tradition = tradition_adventurer_guilds 
			}
		}
		divide = 2
	}
}

expedition_funding_max_option_cost = {
	value = 50
	multiply = activity_cost_scale_by_tier
	multiply = activity_cost_scale_by_era
	if = {
		limit = {
			culture = {
				has_cultural_tradition = tradition_adventurer_guilds 
			}
		}
		divide = 2
	}
}

#TODO: alot of hunt logic here still to sort through and make expedition's version
expedition_entourage_base_set_weighting_value = {
	if = {
		limit = {
			is_available_healthy_adult = yes
			bannable_serving_diarch_trigger = no
			OR = {
				has_court_position = master_of_hunt_court_position
				has_court_position = bodyguard_court_position
				has_court_position = court_physician_court_position
				has_any_good_relationship_with_character_trigger = { CHARACTER = scope:host }
				has_trait = lifestyle_hunter
			}
			NAND = {
				scope:special_option ?= flag:hunt_type_falconry
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
			}
		}
		# Base
		add = 50
		add = ai_energy
		add = ai_boldness
		# We want to have MoH most of all.
		if = {
			limit = { has_court_position = master_of_hunt_court_position }
			add = 100000
		}
		# We want bodyguards too.
		if = {
			limit = { has_court_position = bodyguard_court_position }
			add = 50000
		}
		# We want doctors too.
		if = {
			limit = { has_court_position = court_physician_court_position }
			add = 50000
		}
		# We want friends too.
		if = {
			limit = {
				has_any_good_relationship_with_character_trigger = { CHARACTER = scope:host }
			}
			add = 500
		}
		# Sex
		if = {
			limit = {
				exists = scope:special_option
				NOT = { scope:special_option = flag:hunt_type_falconry }
				NOT = { 
					can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
				}
			}
			divide = 2
		}
	}
	if = {
		limit = {
			bannable_serving_diarch_trigger = yes
		}
		add = -1000
	}
}

expedition_entourage_extras_set_weighting_value = {
	value = 0
	if = {
		limit = {
			is_available_healthy_adult = yes
			is_designated_diarch = no
			OR = {
				is_knight_of = scope:host
				has_trait = education_martial
				has_trait = education_martial_prowess
				has_trait = lazy
				prowess >= decent_skill_rating
			}
			trigger_if = {
				limit = {
					NOT = { scope:special_option ?= flag:hunt_type_falconry }
				}
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
			}
			trigger_else = { always = yes }
		}
		# Base
		add = 150
	}
}

expedition_entourage_max_set_weighting_value = {
	value = 0
	if = {
		limit = {
			is_available_healthy_adult = yes
			is_designated_diarch = no
		}
		# Base
		add = 50
		# Alright, now we're just grabbing everyone.
		## Anyone who can fight.
		if = {
			limit = {
				can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:host }
			}
			multiply = 1.5
		}
	}
}

expedition_weeks_from_funding = {
	value = 3
	if = {
		limit = {
			scope:activity = {
				has_activity_option = { category = expedition_option_funding option = expedition_funding_mid }
			}
		}
		add = 1
	}
	if = {
		limit = {
			scope:activity = {
				has_activity_option = { category = expedition_option_funding option = expedition_funding_max }
			}
		}
		add = 3
	}
}

total_expedition_weeks = {
	value = 0
	add = expedition_weeks_from_funding
	if = {
		limit = {
			scope:host = {
				any_character_artifact = { 
					has_variable = lembas_satchel
					is_equipped = yes
				}
			}
		}
		add = 3 # extra +1 for additional buffer time
	}
}

## Trial Of Greed 
weight_till_trap_triggered = {
	value = 0
	add = var:treasure_weight # (2-9) X 4
	subtract = var:pressure_plate_limit # (2-6), when weight falls below this value, the trap is triggered
}

first_weight_checkpoint = 16
second_weight_checkpoint = 10
third_weight_checkpoint = 6