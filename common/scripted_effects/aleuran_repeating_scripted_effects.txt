
daughter_sent_to_deep_wood_effect = {
	scope:daughter = {
		start_travel_plan = {
			destination = title:b_cykma.title_province # Deepwood barony
			on_start_on_action = on_daughter_goes_to_deep_wood_for_parent
			on_travel_planner_cancel_on_action = on_daughter_goes_to_deep_wood_travel_planner_exit
			on_arrival_on_action = on_daughter_arrives_at_deepwood
			on_arrival_destinations = last
			return_trip = no # One way
		}
	}
}

create_aeluran_advisor_effect = {
	debug_log = "create_aeluran_advisor_effect: YEEE"

	$MATRIARCH$ = {
		save_scope_as = matriarch
	}

	create_character = {
		template = aeluran_sister_advisor
		dynasty = none
		location = title:b_cykma.title_province
		faith = scope:matriarch.faith
		culture = root.culture
		save_scope_as = aeluran_sister_advisor
	}
}

aeluran_advisor_sent_from_deep_wood_effect = {
	debug_log = "SENDING FUCKING ADVISER"
	debug_log_scopes = yes

	scope:aeluran_sister_advisor = {
		start_travel_plan = {
			destination = var:new_liege_to_advise.capital_barony.title_province
			on_start_on_action = on_new_aeluran_advisor_is_on_way
			on_travel_planner_cancel_on_action = on_new_aeluran_advisor_travel_planner_exit
			on_arrival_on_action = on_new_aeluran_advisor_arrives
			on_arrival_destinations = last
			return_trip = no # One way
		}
	}
}

sort_aeluran_candidates_to_list_effect = {
	scope:actor = {
		every_courtier = {
			limit = { 
				is_aeluran_sister_or_higher = yes	
			}
			add_to_list = characters
		}
		every_vassal = {
			limit = {
				is_aeluran_sister_or_higher = yes
			}
			add_to_list = characters
		}
	}
}

appoint_new_aeluron_matriarch_effect = {
	debug_log = "appoint_new_aeluron_matriarch_effect"

	random_in_global_list = {
		variable = aeluran_matrons

		limit = {
			is_alive = yes
		}

		weight = {
			base = 10
			modifier = {
				add = 20
				highest_held_title_tier = tier_empire
			}
			modifier = {
				add = 10
				highest_held_title_tier = tier_kingdom
			}
			modifier = {
				add = 5
				highest_held_title_tier = tier_duchy
			}
			modifier = {
				add = 3
				highest_held_title_tier = tier_county
			}
			modifier = {
				add = 15
				has_trait = born_in_the_red
			}
			modifier = {
				add = 10
				has_trait = magic_talent_3
			}
			modifier = {
				add = 5
				has_trait = magic_talent_2
			}
			modifier = {
				add = 75
				is_ainur_elf_tier = yes
			}
			modifier = {
				add = 50
				is_celestial_elf_tier = yes
			}
			modifier = {
				add = 25
				is_fae_elf_tier = yes
			}
			modifier = {
				add = 10
				is_high_elf = yes
			}
			modifier = {
				add = 15
				is_of_any_royal_elf_bloodline = yes
			}
		}

		debug_log = "appoint_new_aeluron_matriarch_effect random_in_global_list"
		
		save_scope_as = new_matriarch

		scope:new_matriarch = {
			remove_trait = aeluran_matron
			add_trait = aeluran_high_matriarch
		}

		set_global_variable = {
			name = high_matriarch
			value = scope:new_matriarch
		}

		remove_list_global_variable = {
			name = aeluran_matrons
			target = scope:new_matriarch
		}

		debug_log = "handled matriarch effect"
		debug_log_scopes = yes

		appoint_new_aeluran_matron_effect = yes # To replace matron that became matriarch

		every_player = {
			limit = {
				faith = {
					has_doctrine = tenet_aeluran_sisters 
				}
			}
			trigger_event = aeluran_repeating.003 # Notify Players about the New Matriarch
		}
		# remove_list_global_variable
	}

	debug_log = "after random_in_global_list"

}

appoint_new_aeluran_matron_effect = {
	random_living_character = {
		limit = {
			has_trait = aeluran_sister
		}
		weight = {
			base = 10
			modifier = {
				add = 20
				highest_held_title_tier = tier_empire
			}
			modifier = {
				add = 10
				highest_held_title_tier = tier_kingdom
			}
			modifier = {
				add = 5
				highest_held_title_tier = tier_duchy
			}
			modifier = {
				add = 3
				highest_held_title_tier = tier_county
			}
			modifier = {
				add = 15
				has_trait = born_in_the_red
			}
			modifier = {
				add = 10
				has_trait = magic_talent_3
			}
			modifier = {
				add = 5
				has_trait = magic_talent_2
			}
			modifier = {
				add = 75
				is_ainur_elf_tier = yes
			}
			modifier = {
				add = 50
				is_celestial_elf_tier = yes
			}
			modifier = {
				add = 25
				is_fae_elf_tier = yes
			}
			modifier = {
				add = 10
				is_high_elf = yes
			}
			modifier = {
				add = 15
				is_of_any_royal_elf_bloodline = yes
			}
		}

		save_scope_as = new_matron

		scope:new_matron = {
			remove_trait = aeluran_sister
			add_trait = aeluran_matron
		}

		add_to_global_variable_list = {
			name = aeluran_matrons
			target = scope:new_matron
		}

		if = {
			limit = {
				scope:new_matron = {
					is_ai = no
				}
			}
			scope:new_matron = {
				trigger_event = aeluran_repeating.004 # Notify Player They Have Been Promoted
			}
		}
	}
}