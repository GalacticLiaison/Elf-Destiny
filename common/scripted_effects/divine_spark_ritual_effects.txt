elf_trait_ascension = {
	if = {
		limit = {
			OR = { # Cant Ascend Past High Elf till Portal Opened
				is_high_elf = no
				has_global_variable = grand_portal_restored
			}
		}
		ascend_elf = yes

		if = { # Notify players of new highest ascended character
			limit = {
				any_player = {
					NOT = {this = root}
				}
			}
			if = {
				limit = {
					global_var:highest_ascension_reached < elf_trait_level
				}
				set_global_variable = {
					name = highest_ascension_reached
					value = elf_trait_level
				}
				
				save_scope_as = ascended_elf
				every_player = {
					limit = {
						NOT = {this = root}
					}
					trigger_event = divine_spark_rituals.0012
				}
			}
			else_if = {
				limit = {
					age > 1 # lets exclude baby ascensions for now.
				}
				save_scope_as = ascended_elf
				every_player = {
					send_interface_message = {
						type = character_has_ascended
						title = character_has_ascended_title
						desc = character_has_ascended_desc
						right_icon = scope:ascended_elf
					}
				}
			}
	
		}
	}
}

ascend_elf = {
	if = { # Elf Blood
		limit = {
			is_elf_blood = yes
		}
		add_character_flag = race_elf
	}
	else_if = { # Elf
		limit = {
			is_elf = yes
		}
		add_character_flag = race_high_elf
	}
	else_if = { # High Elf
		limit = {
			is_high_elf = yes
		}
		add_character_flag = race_true_elf
	}
	else_if = { # True Elf
		limit = {
			is_true_elf = yes
		}
		add_character_flag = race_fae
	}
	else_if = { # Fae
		limit = {
			is_fae = yes
		}
		add_character_flag = race_fae_radiant
	}
	else_if = { # Fae Radiant
		limit = {
			is_fae_radiant = yes
		}
		add_character_flag = race_celestial
	}
	else_if = { # Celestial
		limit = {
			is_celestial = yes
		}
		add_character_flag = race_seraphic_celestial
	}
	else_if = { # Seraphic Celestial
		limit = {
			is_seraphic_celestial = yes
		}
		add_character_flag = race_eldar
	}
	else_if = { # Eldar
		limit = {
			is_eldar = yes
		}
		add_character_flag = race_maiar
	}
	else_if = { # Maiar
		limit = {
			is_maiar = yes
		}
		add_character_flag = race_valar
	}
	else_if = { # Valar
		limit = {
			is_valar = yes
		}
		add_character_flag = race_aratar
	}
	
	urf_for_all_phenotypes = { APPLY = urf_base_race_init }
	set_appropriate_elf_immortality_age = yes
}