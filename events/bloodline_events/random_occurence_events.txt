namespace = bloodline_random

bloodline_random.999 = {
	hidden = yes
	scope = none

	immediate = {
		every_player  = {
			limit = {
				is_travelling = no
			}

			save_scope_as = player
		}

		if = {
			limit = {
				exists = scope:player
				scope:player = {
					NOT = {
						any_memory = {
							has_memory_type = bloodline_event
						}
					}
					is_any_elf_type = yes
				}
			}
			scope:player = {
				random_list = {
					50 = {
						trigger_event = {
							id = bloodline_random.001
							days = 100
						}
					}
					50 = {
						trigger_event = {
							id = bloodline_random.002
							days = 100
						}
					}
				}

			}
		}
	}
}

# Orphan Child with letter event
bloodline_random.001 = { # Intro
	type = character_event
	title = bloodline_random.001.title
	desc = bloodline_random.001.desc.intro

	trigger = {
		is_ai = no
	}

	theme = bloodline_orphan
	content_source = elf_destiny

	left_portrait = {
		character = scope:advisor
		animation = personality_bold
	}

	right_portrait = {
		character = scope:orphan
		animation = worry
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"

		create_character_memory = {
			type = bloodline_event
		}

		# assign advisor
		if = {
			limit = {
				exists = cp:councillor_aeluran_advisor
			}
			cp:councillor_aeluran_advisor = { save_scope_as = advisor }
		}
		else_if = {
			limit = {
				exists = cp:councillor_steward
			}
			cp:councillor_steward = { save_scope_as = advisor }
		}

		# grab an orphan
		generate_orphan_with_bloodline_effect = yes
	}

	option = {
		name = bloodline_random.001.read_letter
		trigger_event = {
			id = bloodline_random.0011
		}
	}
}

bloodline_random.0011 = { # Read Letter
	type = letter_event
	opening = bloodline_random.0011.title
	desc = bloodline_random.0011.desc
	sender = scope:orphan_mother

	immediate = {
	}

	option = {
		name = bloodline_random.0011.a
		trigger_event = {
			id = bloodline_random.0012
		}
	}
}

bloodline_random.0012 = { # Decide
	type = character_event
	title = bloodline_random.0012.title
	desc = bloodline_random.0012.desc

	theme = bloodline_orphan
	content_source = elf_destiny

	left_portrait = {
		character = scope:advisor
		animation = personality_bold
	}

	right_portrait = {
		character = scope:orphan
		animation = worry
	}

	option = { # Take the child as your ward
		name = bloodline_random.0012.a1
		trigger_event = bloodline_random.0013
		add_courtier = scope:orphan
		scope:orphan = {
			set_relation_guardian = root
		}
	}
	option = { # We will find a spot for them in my court
		name = bloodline_random.0012.a2
		add_courtier = scope:orphan
	}
	option = { # Turn the child away
		name = bloodline_random.0012.a3
		add_piety = -500
	}
}

bloodline_random.0013 = { # Orphan becomes ward
	type = character_event
	title = bloodline_random.0013.title
	desc = bloodline_random.0013.desc

	theme = bloodline_orphan
	content_source = elf_destiny

	left_portrait = {
		character = scope:advisor
		animation = approval
	}

	right_portrait = {
		character = scope:orphan
		animation = admiration
	}

	option = { # Very Well
		name = bloodline_random.0013.a1
	}
}

bloodline_random.002 = { # Tourney Champion Arrives
	type = character_event
	title = bloodline_random.002.title
	desc = {
		desc = bloodline_random.002.desc.intro
		first_valid = {
			triggered_desc = {
				trigger = { scope:champion_type = flag:bow }
				desc = bloodline_random.002.desc.intro.bow
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:board_game }
				desc = bloodline_random.002.desc.intro.board_game
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:duel }
				desc = bloodline_random.002.desc.intro.duel
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:horse }
				desc = bloodline_random.002.desc.intro.horse
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:melee }
				desc = bloodline_random.002.desc.intro.melee
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:recital }
				desc = bloodline_random.002.desc.intro.recital
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:wrestling }
				desc = bloodline_random.002.desc.intro.wrestling
			}
			triggered_desc = {
				trigger = { scope:champion_type = flag:joust }
				desc = bloodline_random.002.desc.intro.joust
			}
		}
		desc = bloodline_random.002.desc.continued
	}

	trigger = {
		is_ai = no
	}

	theme = bloodline_champion
	content_source = elf_destiny

	right_portrait = {
		character = root
		animation = thinking
	}

	lower_left_portrait = {
		character = scope:champion
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"

		create_character_memory = {
			type = bloodline_event
		}

		generate_champion_with_bloodline_effect = yes
	}

	option = {
		name = bloodline_random.002.recruit
		trigger_event = {
			id = bloodline_random.0021
		}
	}

	option = {
		name = bloodline_random.002.ignore
	}
}

bloodline_random.0021 = { # Find Champion In Tavern
	type = character_event
	title = bloodline_random.0021.title
	desc = bloodline_random.0021.desc

	trigger = {
		is_ai = no
	}

	theme = bloodline_champion
	override_background = { reference = tavern }
	content_source = elf_destiny

	left_portrait = {
		character = scope:champion
		animation = personality_bold
	}

	right_portrait = {
		character = root
		animation = throne_room_conversation_2
	}

	immediate = {
		play_music_cue = "mx_cue_positive_effect"
	}

	option = {
		name = bloodline_random.0021.pay
		send_interface_toast = {
			title = bloodline_random.0021.outcome.pay
			left_icon = scope:champion
			pay_short_term_gold = {
				target = scope:champion
				gold = 100
			}
			add_courtier = scope:champion
		}
	}

	option = {
		name = bloodline_random.0021.haggle
		duel = {
			skills = { diplomacy }
			target = scope:champion
	
			50 = { # Success!
				compare_modifier = {
					value = scope:duel_value
					multiplier = 3.5
					min = -49
				}

				desc = bloodline_random.0021.haggle_victory
		
				send_interface_toast = {
					title = bloodline_random.0021.outcome.haggle_victory
					left_icon = scope:champion
					pay_short_term_gold = {
						target = scope:champion
						gold = 50
					}
					add_courtier = scope:champion
				}
			}
			50 = { # Fail!
				compare_modifier = {
					value = scope:duel_value
					multiplier = -3.5
					min = -49
				}
		
				min = 2
	
				desc = bloodline_random.0021.haggle_loss
	
				send_interface_toast = {
					title = bloodline_random.0021.outcome.haggle_loss
					left_icon = scope:champion
					pay_short_term_gold = {
						target = scope:champion
						gold = 200
					}
					add_courtier = scope:champion
				}
			}
		}
	}

	option = {
		name = bloodline_random.0021.nvm
	}
}